package Vista;

import Controler.MyError;
import Model.Click;
import Model.GestorJSON;
import Model.GestorXML;
import Model.MouseControl;
import Model.TransparentBackground;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Robot;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.plaf.OptionPaneUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FerminMF
 */
public class MainFrame extends javax.swing.JFrame {

    Thread delayThread;
    final JFrame thisFrame = this;
    // Dimensiones de este marco
    private Dimension dim;
    // Dimensiones mas pequenias;
    private Dimension secondim;
    private boolean pannel = false;

    /**
     * Constructor de la ventana principal.
     */
    public MainFrame() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        numerouno.setEnabled(false);
        numeroDos.setEnabled(false);
        jpBlockDerecho.setBackground(Color.WHITE);
        jpBloqueInferior.setBackground(Color.WHITE);
        jpEncabezado.setBackground(Color.WHITE);
        jpBloqueIzq.setBackground(Color.WHITE);
        //Seteamos las dimensiones de la caja
        dim = this.getSize();
        jphiden.setVisible(false);
        // Seteamos las dimensiones de el area de establecer el click
        secondim = new Dimension(jpBloqueIzq.getWidth(), this.getHeight());
        this.setSize(secondim);
        jlhelp.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBloqueIzq = new javax.swing.JPanel();
        jl = new javax.swing.JLabel();
        jtAlias = new javax.swing.JTextField();
        andirPosicion = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jtDelayClick = new javax.swing.JTextField();
        dobleClick = new javax.swing.JCheckBox();
        jTextField7 = new javax.swing.JTextField();
        numerouno = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        numeroDos = new javax.swing.JTextField();
        random = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jcEstablecer = new javax.swing.JCheckBox();
        jbtabla = new javax.swing.JButton();
        jlhelp = new javax.swing.JLabel();
        Iniciar1 = new javax.swing.JButton();
        jpEncabezado = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jphiden = new javax.swing.JPanel();
        jpBloqueInferior = new javax.swing.JPanel();
        Iniciar = new javax.swing.JButton();
        borarPosiciones = new javax.swing.JButton();
        jbBorrarUltima = new javax.swing.JButton();
        jbPararSecuencia = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jpBlockDerecho = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jtRetardoSecuencia = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jtRepeticion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPosiciones = new javax.swing.JTable();
        jmSecuencia = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmExportar = new javax.swing.JMenu();
        jmExportarXML = new javax.swing.JMenuItem();
        jmExportarJSON = new javax.swing.JMenuItem();
        jmImportar = new javax.swing.JMenu();
        jmImportarJSON = new javax.swing.JMenuItem();
        jmAyuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cursore v2.1");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jl.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        jl.setText("Alias");

        jtAlias.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        andirPosicion.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        andirPosicion.setText("Posicion");
        andirPosicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andirPosicionActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(javax.swing.UIManager.getDefaults().getColor("ArrowButton.disabled"));
        jTextField2.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        jTextField2.setText("Tiempo del click");
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jtDelayClick.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        dobleClick.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        dobleClick.setText("Doble Click");

        jTextField7.setBackground(javax.swing.UIManager.getDefaults().getColor("ArrowButton.disabled"));
        jTextField7.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        jTextField7.setText("Aleatorio entre");
        jTextField7.setBorder(null);

        numerouno.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        jTextField8.setEditable(false);
        jTextField8.setBackground(javax.swing.UIManager.getDefaults().getColor("ArrowButton.disabled"));
        jTextField8.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        jTextField8.setText(" y");
        jTextField8.setBorder(null);

        numeroDos.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        random.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        random.setText("Utilizar");
        random.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Kristen ITC", 1, 24)); // NOI18N
        jButton1.setText("Editar Clicks");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcEstablecer.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jcEstablecer.setText("Click aleatorio en una zona");

        jbtabla.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        jbtabla.setText("Mostrar/Ocultar clicks");
        jbtabla.setToolTipText("");
        jbtabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtablaActionPerformed(evt);
            }
        });

        jlhelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/loader.gif"))); // NOI18N

        Iniciar1.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        Iniciar1.setText("Iniciar");
        Iniciar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Iniciar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBloqueIzqLayout = new javax.swing.GroupLayout(jpBloqueIzq);
        jpBloqueIzq.setLayout(jpBloqueIzqLayout);
        jpBloqueIzqLayout.setHorizontalGroup(
            jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                        .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcEstablecer)
                            .addComponent(jbtabla, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                                .addComponent(andirPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlhelp))
                            .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBloqueIzqLayout.createSequentialGroup()
                                    .addComponent(jtDelayClick, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dobleClick)
                                    .addGap(12, 12, 12))
                                .addComponent(jTextField2))
                            .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                                .addComponent(jl)
                                .addGap(18, 18, 18)
                                .addComponent(jtAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                        .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                                        .addComponent(numerouno, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(random)
                                    .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(numeroDos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Iniciar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jpBloqueIzqLayout.setVerticalGroup(
            jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(andirPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlhelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcEstablecer)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dobleClick)
                    .addComponent(jtDelayClick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpBloqueIzqLayout.createSequentialGroup()
                        .addGroup(jpBloqueIzqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numerouno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeroDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(random))
                    .addComponent(Iniciar1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtabla, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jLabel3.setText("Cursore");

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jLabel2.setText("v2.1");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/catpawn.png"))); // NOI18N

        javax.swing.GroupLayout jpEncabezadoLayout = new javax.swing.GroupLayout(jpEncabezado);
        jpEncabezado.setLayout(jpEncabezadoLayout);
        jpEncabezadoLayout.setHorizontalGroup(
            jpEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpEncabezadoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpEncabezadoLayout.setVerticalGroup(
            jpEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEncabezadoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jphiden.setBackground(new java.awt.Color(255, 255, 255));
        jphiden.setOpaque(false);

        Iniciar.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        Iniciar.setText("Iniciar");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });

        borarPosiciones.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        borarPosiciones.setText("Borrar Posiciones");
        borarPosiciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borarPosicionesActionPerformed(evt);
            }
        });

        jbBorrarUltima.setFont(new java.awt.Font("Kristen ITC", 1, 16)); // NOI18N
        jbBorrarUltima.setText("Borrar ultima posicion");
        jbBorrarUltima.setToolTipText("");
        jbBorrarUltima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarUltimaActionPerformed(evt);
            }
        });

        jbPararSecuencia.setFont(new java.awt.Font("Kristen ITC", 1, 16)); // NOI18N
        jbPararSecuencia.setText("Parar Secuencia");
        jbPararSecuencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPararSecuenciaActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Kristen ITC", 1, 24)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField4.setEditable(false);
        jTextField4.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.disabled"));
        jTextField4.setFont(new java.awt.Font("Kristen ITC", 1, 17)); // NOI18N
        jTextField4.setText("Retardo en la secuencia");
        jTextField4.setBorder(null);
        jTextField4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jtRetardoSecuencia.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        jTextField3.setEditable(false);
        jTextField3.setBackground(javax.swing.UIManager.getDefaults().getColor("ArrowButton.disabled"));
        jTextField3.setFont(new java.awt.Font("Kristen ITC", 1, 17)); // NOI18N
        jTextField3.setText("Nº de veces a repetir la secuencia");
        jTextField3.setBorder(null);
        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtRepeticion.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N

        javax.swing.GroupLayout jpBlockDerechoLayout = new javax.swing.GroupLayout(jpBlockDerecho);
        jpBlockDerecho.setLayout(jpBlockDerechoLayout);
        jpBlockDerechoLayout.setHorizontalGroup(
            jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBlockDerechoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpBlockDerechoLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jtRetardoSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBlockDerechoLayout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBlockDerechoLayout.createSequentialGroup()
                        .addComponent(jtRepeticion, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))))
        );
        jpBlockDerechoLayout.setVerticalGroup(
            jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBlockDerechoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpBlockDerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtRetardoSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtRepeticion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );

        javax.swing.GroupLayout jpBloqueInferiorLayout = new javax.swing.GroupLayout(jpBloqueInferior);
        jpBloqueInferior.setLayout(jpBloqueInferiorLayout);
        jpBloqueInferiorLayout.setHorizontalGroup(
            jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBloqueInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpBlockDerecho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBloqueInferiorLayout.createSequentialGroup()
                        .addGroup(jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbBorrarUltima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbPararSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpBloqueInferiorLayout.createSequentialGroup()
                                .addGap(333, 333, 333)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpBloqueInferiorLayout.createSequentialGroup()
                                .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(borarPosiciones, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jpBloqueInferiorLayout.setVerticalGroup(
            jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBloqueInferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpBloqueInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBloqueInferiorLayout.createSequentialGroup()
                        .addComponent(jbBorrarUltima, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbPararSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(borarPosiciones, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jpBlockDerecho, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jphidenLayout = new javax.swing.GroupLayout(jphiden);
        jphiden.setLayout(jphidenLayout);
        jphidenLayout.setHorizontalGroup(
            jphidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jphidenLayout.createSequentialGroup()
                .addComponent(jpBloqueInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jphidenLayout.setVerticalGroup(
            jphidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jphidenLayout.createSequentialGroup()
                .addComponent(jpBloqueInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtPosiciones.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jtPosiciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X", "Y", "Doble", "Tiempo", "Aleatorio", "Alias", "Texto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtPosiciones.setEditingColumn(0);
        jtPosiciones.setEnabled(false);
        jScrollPane1.setViewportView(jtPosiciones);

        jMenu2.setText("Secuencia");

        jmExportar.setText("Exportar");

        jmExportarXML.setText("Exportar XML");
        jmExportarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmExportarXMLActionPerformed(evt);
            }
        });
        jmExportar.add(jmExportarXML);

        jmExportarJSON.setText("Exportar JSON");
        jmExportarJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmExportarJSONActionPerformed(evt);
            }
        });
        jmExportar.add(jmExportarJSON);

        jMenu2.add(jmExportar);

        jmImportar.setText("Importar");

        jmImportarJSON.setText("Importar JSON");
        jmImportarJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmImportarJSONActionPerformed(evt);
            }
        });
        jmImportar.add(jmImportarJSON);

        jMenu2.add(jmImportar);

        jmSecuencia.add(jMenu2);

        jmAyuda.setText("Ayuda");
        jmSecuencia.add(jmAyuda);

        setJMenuBar(jmSecuencia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpBloqueIzq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jphiden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jphiden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpBloqueIzq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Este metodo nos permite añadir una posicion donde querremos clickar asi
     * como determinar sus caracteristicas, y añadirla a la tabla.
     *
     * @param evt
     */
    private void andirPosicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andirPosicionActionPerformed
        // Instancia de MouseControl, que nos permite controlar el hilo de ejecución y trabajar con los
        // clicks del raton.
        MouseControl mouse = new MouseControl();
        // Creamos un thread, conde se comprueba si los campos para la creación de click estan correctamente
        // rellenados, y personalizamos el error en caso de una respuesta negativa
        delayThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    if (jtAlias.getText().isEmpty() || jtAlias.getText().length() > 30 || MouseControl.aliasRepetido(jtAlias.getText())) {
                        if (jtAlias.getText().isEmpty()) {
                            VentanaNotificaciones.ventanaError("Es necesario especificar un alias", thisFrame);
                        }
                        if (jtAlias.getText().length() > 30) {
                            VentanaNotificaciones.ventanaError("Alias demasiado largo", thisFrame);

                        }
                        if (MouseControl.aliasRepetido(jtAlias.getText())) {
                            VentanaNotificaciones.ventanaError("Alias repetido en la secuencia", thisFrame);

                        }
                    } else {
                        // Si todo ha salido bien, creamos una instancia de Click, que nos ayuda a determiar
                        // las caracteristicas del click seleccionado
                        Click cli;
                        if (jcEstablecer.isSelected()) {
                            // En caso de haber seleccionado "CLick aleatorio en una zona"
                            // iniciamos un Robot, y establecemos una ventana transparente,
                            // el click será aleatorio en esa zona.
                            TransparentBackground.iniciarCaptura();
                            Robot e = new Robot();
                            while (TransparentBackground.isTeste()) {
                                e.delay(1000);
                            }
                            TransparentBackground.setTeste(true);
                            cli = mouse.establecerPropiedadesClick(jtDelayClick.getText(), dobleClick.isSelected(), random.isSelected(), numerouno.getText(), numeroDos.getText());
                            cli.setAlias(jtAlias.getText());
                            cli.setEsCuadrado(true);
                            cli.setCoordenadasClick(TransparentBackground.getCoordenadasPasar());
                            cli.setCoordenadas(TransparentBackground.coordenadas);
                            MouseControl.getConjuntoClicks().add(cli);
                            anadirAlaTabla(cli);
                        } else {
                            // En caso contrario, unicamente se ejecuta un simple delay, y luego se coje
                            // la posicion del raton
                            jlhelp.setVisible(true);
                            andirPosicion.setEnabled(false);
                            Point actualPosi = mouse.devolverPosicion();

                            // Igualmente se establecen las propiedades
                            cli = mouse.establecerPropiedadesClick(jtDelayClick.getText(), dobleClick.isSelected(), random.isSelected(), numerouno.getText(), numeroDos.getText());
                            cli.setAlias(jtAlias.getText());
                            cli.setLocation(actualPosi);
                            // Y se añade al conjunto de clicks, que es un array statico, donde los clicks permanecerán mientras el programa esté en
                            // ejecución
                            MouseControl.getConjuntoClicks().add(cli);
                            anadirAlaTabla(cli);
                            //Cambiamos el icono a loader otra vez, el thread es para que el ok se quede 2 segundos
                            jlhelp.setIcon(new ImageIcon(getClass().getResource("/Vista/ok.png")));
                            Thread d = new Thread(new Runnable() {
                                @Override
                                public void run() {
                                    try {
                                        Robot e = new Robot();
                                        e.delay(1100);
                                    } catch (AWTException ex) {

                                    }

                                }
                            });
                            d.run();
                            jlhelp.setIcon(new ImageIcon(getClass().getResource("/Vista/loader.gif")));
                            jlhelp.setVisible(false);
                            andirPosicion.setEnabled(true);
                        }

                    }
                    // Controlamos los posibles errores y los mostramos por pantalla
                    // VentanaNotificaciones es una clase que nos ayuda a ello
                } catch (InterruptedException ex) {
                    VentanaNotificaciones.ventanaError("Se ha detenido la ejecución", thisFrame);
                } catch (MyError ex) {
                    // En este caso, tenemos el error personalizado, 
                    VentanaNotificaciones.ventanaError(ex.getMessage(), thisFrame);
                } catch (AWTException ex) {
                    VentanaNotificaciones.ventanaError("Error al establecer el area", thisFrame);
                } catch (Exception ex) {
                    VentanaNotificaciones.ventanaError("Error inesperado", thisFrame);
                }
            }
            // Finalmente le damos un nombre al thread
        }, "AnadirPoss");

        mouse.setCopiaThread(delayThread);
        delayThread.start();


    }//GEN-LAST:event_andirPosicionActionPerformed

    // Este codigo se ejecuta cuando pulsamos iniciar la secuencia de clicks
    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed

        // Creamos una nueva instancia de MouseControl para realizar las acciones pertinentes
        MouseControl control = new MouseControl();
        // Creamos un nuevo hilo, este si que lo usaremos posteriormente
        delayThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    if (MouseControl.getConjuntoClicks().isEmpty()) {
                        VentanaNotificaciones.ventanaError("No hay clicks a realizar", thisFrame);
                    } else {
                        // Si no esta vacio el campo para repetir el la secuencia, la repetimos cuantas veces sea necesario
                        if (!jtRepeticion.getText().isEmpty()) {
                            for (int i = 0; i < Integer.parseInt(jtRepeticion.getText()); i++) {
                                control.realizarSecuencia(MouseControl.getConjuntoClicks(), jtRetardoSecuencia.getText());
                            }
                        } else {
                            // Y si no, simplemente la ejecutamos
                            control.realizarSecuencia(MouseControl.getConjuntoClicks(), jtRetardoSecuencia.getText());

                        }
                        // Mostramos un mensaje cuando se ha realizado la secuencia correctamente
                        VentanaNotificaciones.ventanaOk("Secuencia realizada correctamente \n"
                                + "Finalizada en: " + Calendar.getInstance().getTime().toString(), thisFrame);

                    }
                } catch (MyError ex) {
                    VentanaNotificaciones.ventanaError(ex.getMessage(), thisFrame);
                } catch (InterruptedException ex) {
                    while (true) {
                        break;
                    }
                } catch (NumberFormatException ex) {
                    VentanaNotificaciones.ventanaError("Input no valido", thisFrame);
                }
            }
        }, "RealizaSecuencia");
        // Ahora si que copiamos el thread, dado que vamos a interactuar con el
        control.setCopiaThread(delayThread);
        delayThread.start();
    }//GEN-LAST:event_IniciarActionPerformed

    //Borramos todas las posiciones, si hay claro
    private void borarPosicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borarPosicionesActionPerformed
        try {
            if (jtPosiciones.getRowCount() == 0) {
                VentanaNotificaciones.ventanaError("No hay posiciones a eliminar", thisFrame);
            } else {
                // Una vez borradas, dejamos la tabla vacia
                MouseControl.setConjuntoClicks(new ArrayList<>());
                DefaultTableModel e = (DefaultTableModel) jtPosiciones.getModel();
                e.setNumRows(0);
            }

        } catch (Exception e) {
            VentanaNotificaciones.ventanaOk("Error inesperado", thisFrame);
        }

    }//GEN-LAST:event_borarPosicionesActionPerformed

    private void jbBorrarUltimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarUltimaActionPerformed
        try {
            // Cogemos el conjunto de clicks y eliminamos la ultima posición, luego le quitamos la ultima fila a la tabla
            MouseControl.getConjuntoClicks().remove(MouseControl.getConjuntoClicks().
                    get(MouseControl.getConjuntoClicks().size() - 1));
            DefaultTableModel e = (DefaultTableModel) jtPosiciones.getModel();
            e.removeRow(e.getRowCount() - 1);
        } catch (IndexOutOfBoundsException e) {
            VentanaNotificaciones.ventanaError("No hay posiciones a eliminar", thisFrame);
        } catch (Exception e) {
            VentanaNotificaciones.ventanaError("Error inesperado", thisFrame);
        }
    }//GEN-LAST:event_jbBorrarUltimaActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        // TODO add your handling code here:
//        Teclas_pulsar hola = new Teclas_pulsar();
//        hola.setVisible(true);
        if (!MouseControl.getConjuntoClicks().isEmpty()) {
            EditClickFrame nev = new EditClickFrame(jtPosiciones);
        } else {
            VentanaNotificaciones.ventanaError("No hay clicks a editar", thisFrame);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void randomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomActionPerformed
        // TODO add your handling code here:
        if (random.isSelected()) {
            jtDelayClick.setEnabled(false);
            numerouno.setEnabled(true);
            numeroDos.setEnabled(true);
            jtDelayClick.setText("");
        } else {
            jtDelayClick.setEnabled(true);
            numerouno.setText("");
            numerouno.setEnabled(false);
            numeroDos.setText("");
            numeroDos.setEnabled(false);
        }
    }//GEN-LAST:event_randomActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jbPararSecuenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPararSecuenciaActionPerformed
        // TODO add your handling code here:
        if (delayThread.isAlive()) {
            delayThread.interrupt();
        } else {
            VentanaNotificaciones.ventanaError("No hay ninguna secuencia activa", this);
        }
    }//GEN-LAST:event_jbPararSecuenciaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void jbtablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtablaActionPerformed
        if (!pannel) {
            this.setSize(dim);
            jphiden.setVisible(true);
            pannel = true;
        } else {
            jphiden.setVisible(false);
            this.setSize(secondim);
            pannel = false;
        }


    }//GEN-LAST:event_jbtablaActionPerformed

    private void Iniciar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Iniciar1ActionPerformed

        // Creamos una nueva instancia de MouseControl para realizar las acciones pertinentes
        MouseControl control = new MouseControl();
        // Creamos un nuevo hilo, este si que lo usaremos posteriormente
        delayThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {

                    // Si no esta vacio el campo para repetir el la secuencia, la repetimos cuantas veces sea necesario
                    if (!jtRepeticion.getText().isEmpty()) {
                        for (int i = 0; i < Integer.parseInt(jtRepeticion.getText()); i++) {
                            control.realizarSecuencia(MouseControl.getConjuntoClicks(), jtRetardoSecuencia.getText());
                        }
                    } else {
                        // Y si no, simplemente la ejecutamos
                        control.realizarSecuencia(MouseControl.getConjuntoClicks(), jtRetardoSecuencia.getText());

                    }
                    // Mostramos un mensaje cuando se ha realizado la secuencia correctamente
                    VentanaNotificaciones.ventanaOk("Secuencia realizada correctamente \n"
                            + "Finalizada en: " + Calendar.getInstance().getTime().toString(), thisFrame);
                } catch (MyError ex) {
                    VentanaNotificaciones.ventanaError(ex.getMessage(), thisFrame);
                } catch (InterruptedException ex) {
                    while (true) {
                        break;
                    }
                } catch (NumberFormatException ex) {
                    VentanaNotificaciones.ventanaError("Input no valido", thisFrame);
                }
            }
        }, "RealizaSecuencia");
        // Ahora si que copiamos el thread, dado que vamos a interactuar con el
        control.setCopiaThread(delayThread);
        delayThread.start();


    }//GEN-LAST:event_Iniciar1ActionPerformed

    private void jmExportarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmExportarXMLActionPerformed
        try {
            FileExport e = new FileExport("XML");
            e.setVisible(true);
        } catch (Exception ex) {
            VentanaNotificaciones.ventanaError("Error al ecribir XML", this);
        }

    }//GEN-LAST:event_jmExportarXMLActionPerformed

    private void jmExportarJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmExportarJSONActionPerformed
        // TODO add your handling code here:
        try {
            FileExport e = new FileExport("JSON");
            e.setVisible(true);
        } catch (Exception ex) {
            VentanaNotificaciones.ventanaError("Error al ecribir", this);
        }

    }//GEN-LAST:event_jmExportarJSONActionPerformed

    private void jmImportarJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmImportarJSONActionPerformed
        // TODO add your handling code here:
        FileImport e = new FileImport(this);
        e.setVisible(true);
        DefaultTableModel z = (DefaultTableModel) jtPosiciones.getModel();
        z.setNumRows(0);


    }//GEN-LAST:event_jmImportarJSONActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Iniciar;
    private javax.swing.JButton Iniciar1;
    private javax.swing.JButton andirPosicion;
    private javax.swing.JButton borarPosiciones;
    private javax.swing.JCheckBox dobleClick;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton jbBorrarUltima;
    private javax.swing.JButton jbPararSecuencia;
    private javax.swing.JButton jbtabla;
    private javax.swing.JCheckBox jcEstablecer;
    private javax.swing.JLabel jl;
    private javax.swing.JLabel jlhelp;
    private javax.swing.JMenu jmAyuda;
    private javax.swing.JMenu jmExportar;
    private javax.swing.JMenuItem jmExportarJSON;
    private javax.swing.JMenuItem jmExportarXML;
    private javax.swing.JMenu jmImportar;
    private javax.swing.JMenuItem jmImportarJSON;
    private javax.swing.JMenuBar jmSecuencia;
    private javax.swing.JPanel jpBlockDerecho;
    private javax.swing.JPanel jpBloqueInferior;
    private javax.swing.JPanel jpBloqueIzq;
    private javax.swing.JPanel jpEncabezado;
    private javax.swing.JPanel jphiden;
    private javax.swing.JTextField jtAlias;
    private javax.swing.JTextField jtDelayClick;
    private javax.swing.JTable jtPosiciones;
    private javax.swing.JTextField jtRepeticion;
    private javax.swing.JTextField jtRetardoSecuencia;
    private javax.swing.JTextField numeroDos;
    private javax.swing.JTextField numerouno;
    private javax.swing.JCheckBox random;
    // End of variables declaration//GEN-END:variables
    /**
     * Este metodo nos permite añadir nuevos elementos a la tabla
     *
     * @param e Click para aniadir a la tabla.
     */
    public void anadirAlaTabla(Click e) {
        String doble = null;
        String aleatorio = null;
        String sihayText = null;
        if (e.isDoble()) {
            doble = "Si";
        } else if (!e.isDoble()) {
            doble = "No";
        }
        if (e.isRandom()) {
            aleatorio = "Si";
        } else if (!e.isRandom()) {
            aleatorio = "No";
        }
        if (e.isSihayTexto()) {
            sihayText = "Si";
        } else if (!e.isSihayTexto()) {
            sihayText = "No";
        }
        if (e.isRandom()) {
            if (e.isEsCuadrado()) {

                DefaultTableModel z = (DefaultTableModel) jtPosiciones.getModel();
                String[] stri = {(e.getCoordenadasClick()[3]  - e.getCoordenadasClick()[2]) + "-" + e.getCoordenadasClick()[3],
                    (e.getCoordenadasClick()[1] - e.getCoordenadasClick()[0]) + "-" + e.getCoordenadasClick()[1],
                    doble, e.getRandomuno() / 1000 + "-" + e.getRandomdos() / 1000, aleatorio, e.getAlias(), sihayText};
                z.addRow(stri);
            } else {
                DefaultTableModel z = (DefaultTableModel) jtPosiciones.getModel();
                String[] stri = {e.getLocation().getX() + "", e.getLocation().getY() + "", doble, e.getRandomuno() / 1000 + "-" + e.getRandomdos() / 1000, aleatorio, e.getAlias(), sihayText};
                z.addRow(stri);
            }

        } else if (!e.isRandom()) {
            if (e.isEsCuadrado()) {
                DefaultTableModel z = (DefaultTableModel) jtPosiciones.getModel();
                String[] stri = {(e.getCoordenadasClick()[3] - e.getCoordenadasClick()[2]) + "-" + e.getCoordenadasClick()[3],
                    (e.getCoordenadasClick()[1] - e.getCoordenadasClick()[0]) + "-" + e.getCoordenadasClick()[1],
                    doble, e.getDuracionClick() / 1000 + "", aleatorio, e.getAlias(), sihayText};
                z.addRow(stri);
            } else {
                DefaultTableModel z = (DefaultTableModel) jtPosiciones.getModel();

                String[] stri = {e.getLocation().getX() + "", e.getLocation().getY() + "", doble, e.getDuracionClick() / 1000 + "", aleatorio, e.getAlias(), sihayText};
                z.addRow(stri);
            }

        }

    }

}
